- name: whoami
  set_fact:
    whoami: "{{ lookup('env', 'USER') | default('dolph', true) }}"
  tags:
  - always
  - whoami

- name: ensure user exists
  user:
    name: "{{ whoami }}"

- name: allow passwordless sudo
  template:
    src: etc/sudoers.d/whoami
    dest: "/etc/sudoers.d/{{ whoami }}"
    mode: 0400

- name: configure automated upgrades
  include: automated-upgrades.yml
  tags:
  - dnf
  - dnf-automatic

- name: configure ssh client
  include: ssh-client.yml
  tags: ssh

- name: configure ssh server
  include: ssh-server.yml
  tags: ssh

- name: configure terminal
  include: terminal.yml
  tags: terminal

- name: configure git
  include: git.yml
  tags: git

- name: configure editor
  include: vim.yml
  tags: vim

- name: configure go
  include: go.yml
  tags: go

- name: configure terminal multiplexer
  include: tmux.yml
  tags: tmux

- name: configure ripgrep
  include: ripgrep.yml
  tags:
  - ripgrep
  - rg

- name: configure python
  include: python.yml
  tags: python

- name: configure vagrant
  include: vagrant.yml
  tags: vagrant

- name: install additional packages on fedora
  dnf:
    name:
    - autossh
    - curl
    - dnf-plugin-system-upgrade
    - htop
    - jq
    - sshpass
    - tree

- name: create a bin directory
  file:
    path: "/home/{{ whoami }}/bin"
    state: directory
    owner: "{{ whoami }}"
    group: "{{ whoami }}"
  tags:
  - bin

- name: populate bin dir
  copy:
    src: "bin/{{ item }}"
    dest: "/home/{{ whoami }}/bin"
    mode: 0770
    owner: "{{ whoami }}"
    group: "{{ whoami }}"
  loop:
  - a
  - fail
  - gac
  - gacp
  - gap
  - gcp
  - git-delete-merged-branches
  - git-list-merged-branches
  - git-pr
  - git-ready
  - git-recommit
  - git-rmcommit
  - git-uncommit
  - icanhazip
  - loop
  - n
  - try
  - upgrade
  - uplink-monitor
  - uuid
  tags:
  - bin

- name: remove docker
  include: docker.yml
  tags: docker

- name: install podman
  dnf:
    name: podman
  tags: podman

- name: find wireguard ip from ansible facts
  set_fact:
    wireguard_ip: "{{ ansible_wg0.ipv4.address }}"
  when:
  - wireguard_ip is not defined
  - ansible_wg0 is defined
  tags:
  - wireguard
  - wireguard-config

- name: load wireguard peers
  include_vars:
    file: vars/wireguard-peers
  when: wireguard_ip is not defined
  tags:
  - wireguard
  - wireguard-config
  - ping-wireguard-peers

- name: find wireguard ip
  set_fact:
    wireguard_ip: "{{ item.wireguard_ip }}"
  loop: "{{ wireguard_peers }}"
  when:
  - wireguard_ip is not defined
  - item.hostname == ansible_hostname
  tags:
  - wireguard
  - wireguard-config

- name: check for wireguard_ip
  fail:
    msg: "A wireguard_ip is not defined. Skipping wireguard configuration. Example: --extra-vars=wireguard_ip=192.168.2.x"
  ignore_errors: true
  when: wireguard_ip is not defined
  tags:
  - wireguard
  - wireguard-config

- name: configure wireguard
  include: wireguard.yml
  when: wireguard_ip is defined
  tags: wireguard
