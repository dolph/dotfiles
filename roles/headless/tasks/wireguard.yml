---
# https://copr.fedorainfracloud.org/
- name: check enabled community repos
  command: dnf copr list --enabled
  args:
    warn: false
  changed_when: false
  register: enabled_copr_repos
  when:
  - ansible_distribution == 'Fedora'
  - ansible_distribution_major_version | int == 31

# https://copr.fedorainfracloud.org/
- name: enable wireguard community repo
  command: dnf copr enable -y jdoss/wireguard
  args:
    warn: false
  when:
  - ansible_distribution == 'Fedora'
  - ansible_distribution_major_version | int == 31
  - "'jdoss/wireguard' not in enabled_copr_repos.stdout"

- name: install kernel dev stuff
  dnf:
    name:
    - kernel-headers
    - kernel-devel
  register: task
  until: task.rc == 0
  retries: 3
  delay: 0

- name: install wireguard on Fedora 31
  dnf:
    name:
    - wireguard-dkms
    - wireguard-tools
  when:
  - ansible_distribution == 'Fedora'
  - ansible_distribution_major_version | int == 31
  register: task
  until: task.rc == 0
  retries: 3
  delay: 0

- name: install wireguard on Fedora 32+
  dnf:
    name:
    - wireguard-tools
  when:
  - ansible_distribution == 'Fedora'
  - ansible_distribution_major_version | int >= 32
  register: task
  until: task.rc == 0
  retries: 3
  delay: 0

- name: create config dir
  file:
    path: /etc/wireguard/
    state: directory
    mode: 0600

- name: generate private key
  shell: umask 077; wg genkey > /etc/wireguard/private
  args:
    creates: /etc/wireguard/private

- name: ensure private key is protected correctly
  file:
    path: /etc/wireguard/private
    mode: 0600

- name: read private key
  slurp:
    src: /etc/wireguard/private
  changed_when: false
  register: wireguard_private_key

- name: set private key variable
  set_fact:
    wireguard_private_key: "{{ wireguard_private_key.content | b64decode }}"

- name: generate public key from private key
  shell: wg pubkey < /etc/wireguard/private
  changed_when: false
  register: wireguard_public_key

- name: set public key variable
  set_fact:
    wireguard_public_key: "{{ wireguard_public_key.stdout }}"

- name: decrypt wireguard-peers locally
  become: true
  become: "{{ whoami }}"
  delegate_to: localhost
  command: /home/{{ whoami }}/venv/ansible/bin/ansible-vault decrypt vars/wireguard-peers

- name: write public key to local file
  become: false
  local_action:
    module: lineinfile
    line: "- {'hostname': '{{ ansible_hostname }}', 'wireguard_ip': '{{ wireguard_ip }}', 'ip': '{{ ansible_default_ipv4.address }}', 'public_key': '{{ wireguard_public_key }}'}"
    path: vars/wireguard-peers
    regexp: "^\ {'wireguard_ip':\ '{{ wireguard_ip }}',\ "

- name: re-encrypt wireguard-peers locally
  become: true
  become: "{{ whoami }}"
  delegate_to: localhost
  command: /home/{{ whoami }}/venv/ansible/bin/ansible-vault encrypt vars/wireguard-peers

- name: ensure permissions on wireguard-peers are set correctly
  file:
    path: vars/wireguard-peers
    owner: "{{ whoami }}"
    group: "{{ whoami }}"

- name: reload wireguard peers
  include_vars:
    file: vars/wireguard-peers
  tags: ping-wireguard-peers

- name: push wireguard config
  template:
    src: etc/wireguard/wg0.conf
    dest: /etc/wireguard/wg0.conf
  register: wireguard_conf

- name: stop wireguard when wireguard config changes
  command: wg-quick down wg0
  when:
  - wireguard_conf.changed
  - ansible_wg0 is defined

- name: refresh facts after stopping wireguard
  setup:
  when:
  - wireguard_conf.changed
  - ansible_wg0 is defined

- name: enable wireguard
  command: wg-quick up wg0
  when:
  - wireguard_peers | length >= 2
  - ansible_wg0 is not defined

- name: test connectivity to peers
  command: "ping -c 1 {{ item.wireguard_ip }}"
  loop: "{{ wireguard_peers }}"
  loop_control:
    label: "{{ item.hostname }} ({{ item.wireguard_ip }})"
  when: item.wireguard_ip != wireguard_ip
  changed_when: false
  tags: ping-wireguard-peers
