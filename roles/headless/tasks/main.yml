- name: whoami
  set_fact:
    whoami: "{{ lookup('env', 'USER') | default('dolph', true) }}"
  tags:
  - always
  - whoami

- name: ensure user exists
  user:
    name: "{{ whoami }}"

- name: allow passwordless sudo
  template:
    src: etc/sudoers.d/whoami
    dest: "/etc/sudoers.d/{{ whoami }}"
    mode: 0400

- name: configure automated upgrades
  include: automated-upgrades.yml
  tags: dnf-automatic

- name: configure ssh client
  include: ssh-client.yml
  tags: ssh

- name: configure terminal
  template:
    src: "home/{{ item }}"
    dest: "/home/{{ whoami }}/.{{ item }}"
    owner: "{{ whoami }}"
    group: "{{ whoami }}"
  with_items:
  - bash_profile
  - bashrc
  - inputrc
  - profile
  tags:
  - terminal
  - bashrc

- name: ensure a localrc exists
  copy:
    content: ""
    dest: "/home/{{ whoami }}/.localrc"
    force: false
    owner: "{{ whoami }}"
    group: "{{ whoami }}"
  tags:
  - terminal
  - localrc

- name: configure git
  include: git.yml
  tags: git

- name: configure editor
  include: vim.yml
  tags: vim

- name: configure go
  include: go.yml
  tags: go

- name: configure terminal multiplexer
  include: tmux.yml
  tags: tmux

- name: configure ack
  include: ack.yml
  tags: ack

- name: configure ripgrep
  include: ripgrep.yml
  tags:
  - ripgrep
  - rg

- name: configure python
  include: python.yml
  tags: python

- name: install additional packages on arch
  pacman:
    name:
    - autossh
    - curl
    - htop
    - sshpass
    - tree
    - vagrant
    - virtualbox
    - vlc
  when: ansible_distribution == 'Archlinux'

- name: install additional packages on ubuntu
  apt:
    name:
    - autossh
    - curl
    - htop
    - sshpass
    - tree
    - vagrant
    - virtualbox
    - vlc
    force_apt_get: true
  when: ansible_distribution == 'Ubuntu'

- name: install additional packages on fedora
  yum:
    name:
    - autossh
    - curl
    - htop
    - sshpass
    - tree
    - vagrant
    # - virtualbox
  when: ansible_distribution == 'Fedora'

- name: create a bin directory
  file:
    path: "/home/{{ whoami }}/bin"
    state: directory
    owner: "{{ whoami }}"
    group: "{{ whoami }}"
  tags:
  - bin

- name: populate bin dir
  copy:
    src: "bin/{{ item }}"
    dest: "/home/{{ whoami }}/bin"
    mode: 0770
    owner: "{{ whoami }}"
    group: "{{ whoami }}"
  loop:
  - a
  - fail
  - gac
  - gacp
  - gap
  - gcp
  - git-delete-merged-branches
  - git-list-merged-branches
  - git-pr
  - git-ready
  - git-recommit
  - git-rmcommit
  - git-uncommit
  - icanhazip
  - loop
  - n
  - try
  - upgrade
  - uplink-monitor
  - uuid
  tags:
  - bin

# TODO: ssh-server (security)
