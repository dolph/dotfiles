#!/bin/bash
set -e

# enable tracing in case you need to explain what went wrong to jeblair
set -x

# assume a non-existent branch unless specified otherwise
BRANCH=${1:-feature/noexist}
COMMIT_MESSAGE="Update the $BRANCH branch"

# ensure the remote branch is tracked
git branch --list | grep $BRANCH || git checkout --track origin/$BRANCH

# make sure master is up to date
git ready

# make sure the feature branch is up to date
git checkout $BRANCH
git pull --ff-only origin $BRANCH

# create a temporary branch
git checkout -b merge-branch

# create a merge commit
git merge origin/master --message "$COMMIT_MESSAGE"

# amend the merge commit to automatically add a Change-ID to the commit message
GIT_EDITOR=/usr/bin/true git commit --amend

# push the merge commit to gerrit
git review -R $BRANCH

# switch off the branch so we can delete it
git checkout master

# delete the temporary branch
git branch -D merge-branch

# restore happiness
git ready
