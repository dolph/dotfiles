" change the leader to be a comma vs slash
let mapleader=","

" syntax highlighting
syntax on

" display line numbers
set number

" using only 1 column (and 1 space) while possible
set numberwidth=1

" we are using dark background in vim
set background=dark

" ignore these files when completing
set wildignore+=.git,*.pyc

" use spaces, not tabs, for autoindent/tab key.
set expandtab

" don't wrap text
set nowrap

" don't wrap text in the middle of a word
set linebreak

" always set auto-indenting on
set autoindent

" use smart indent if there is no indent file
set smartindent

" <tab> inserts 4 spaces
set tabstop=4

" but an indent level is 4 spaces wide.
set shiftwidth=4

" <BS> over an autoindent deletes both spaces.
set softtabstop=4

" rounds indent to a multiple of shiftwidth
set shiftround

" show matching <> (html mainly) as well
set matchpairs+=<:>

" disable folding
set nofoldenable

" don't bell or blink
set noerrorbells
set vb t_vb=

" keep our cursor in the middle of the screen
set scrolloff=100
set sidescrolloff=30

" show whitespace
set list
set listchars=tab:>-,trail:~

" default to using case insensitive searches ...
set ignorecase

" ... unless uppercase letters are used in the regex.
set smartcase

" handle tabs more intelligently while searching
set smarttab

" highlight searches by default.
set hlsearch

" incrementally search while typing a /regex
set incsearch

" improve response time of plugins, etc
set updatetime=100

" add hyphens to the list of "word characters" so that they aren't word
" separators anymore
set iskeyword+=-

" remove trailing whitespace on <leader>S
noremap <leader>S :%s/\s\+$//<cr>:let @/=''<CR>

" load plugins
set runtimepath^={{ runtimepaths | join(',') }}

" set color theme
silent! colorscheme solarized

" set shortcut key and open NerdTree at start
map <leader>n :NERDTreeToggle<CR>
let NERDTreeIgnore = ['\.pyc$', '\.egg-info$', '\.db$']
" disable key mappings that conflict with vim-tmux-navigator
let g:NERDTreeMapJumpNextSibling=""
let g:NERDTreeMapJumpPrevSibling=""

" run flake8 on open & save
autocmd BufReadPost *.py call Flake8()
autocmd BufWritePost *.py call Flake8()

" run rust auto-formatting on save
" requires `cargo install rustfmt`
let g:rustfmt_autosave = 1

" enable spell checking
set spell spelllang=en_us

" disable double spacing between sentences
set nojoinspaces

" Use the X11 clipboard (shared with tmux, over SSH, etc)
" set clipboard=unnamedplus " does not seem to be needed with i3 + tmux + gvim?

" Always use unix-style line endings
set ff=unix

" 2-space indention in YAML files
autocmd FileType yaml setlocal tabstop=2 sts=2 shiftwidth=2 expandtab

" 2-space indention in HTML files
autocmd FileType html setlocal tabstop=2 sts=2 shiftwidth=2 expandtab

" 4-space tab-based in Go files
autocmd FileType go setlocal noexpandtab listchars=tab:\ \ ,trail:~
" Automatically format Go files.
" autocmd BufWritePre *.go Fmt

" Disable the creation of *.swp files (allows write conflicts)
set noswapfile

" gitgutter configuration
let g:gitgutter_enabled = 1
let g:gitgutter_grep = 'rg'
let g:gitgutter_set_sign_backgrounds = 1
highlight SignColumn ctermbg=16
highlight GitGutterAdd ctermfg=2 ctermbg=16
highlight GitGutterChange ctermfg=3 ctermbg=16
highlight GitGutterDelete ctermfg=1 ctermbg=16

" status bar configuration
let g:airline_theme='dark_minimal'
let g:airline_section_z = ''
