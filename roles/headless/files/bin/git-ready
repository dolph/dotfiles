#!/bin/bash
set -e
BRANCH_NAME=$1

# Preserve uncommitted changes, if there are any.
if ! git diff-index --quiet HEAD -- ; then
    git add -u
    git stash

    function restore_uncommitted_changes {
        git stash pop
    }
    trap restore_uncommitted_changes EXIT
fi

git checkout master
git pull

if [ ! -z "$BRANCH_NAME" ]; then
    if git show-branch "remotes/origin/$BRANCH_NAME" 2>&- && git show-ref --verify --quiet "refs/heads/$BRANCH_NAME" ; then
        # Branch exists both locally and upstream.
        git checkout $BRANCH_NAME
        git rebase master
        echo 'Branch exists both upstream and locally!'
    elif git show-ref --verify --quiet "refs/heads/$BRANCH_NAME" ; then
        # If the branch only exists locally, use it.
        git checkout $BRANCH_NAME
        git rebase master
    elif git show-branch "remotes/origin/$BRANCH_NAME" 2>&- ; then
        # If the branch only exists upstream, use it.
        git checkout --track "origin/$BRANCH_NAME"
        git pull origin $BRANCH_NAME
        git rebase master
    else
        # Branch does not exist yet! Create it.
        git checkout -b $BRANCH_NAME
    fi
fi
